version: '3.7'
services:

  nginx:
    image: nginx:latest
    hostname: nginx
    restart: always
    ports:
      - "3030:80"
    depends_on:
      - "hasura"
    volumes:
      - ./frontend/dist:/frontend-dist
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/error.log:/etc/nginx/error_log.log

  frontend:
    image: frontend
    build:
      context: ./frontend
    init: true
    ports:
      - "3000:3000"
    depends_on:
      - "hasura"
    volumes:
      - ./frontend:/frontend:delegated
      - node_modules_volume:/frontend/node_modules

  elm-graphql-generator:
    image: node:15.14.0-alpine3.13
    volumes:
      - ./frontend/src/HasuraClient:/output/HasuraClient
    depends_on:
      - "hasura"

  postgres:
    image: postgres:12
    restart: always
    volumes:
    - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgrespassword
  hasura:
    image: hasura/graphql-engine:v2.15.0.cli-migrations-v3
    ports:
      - "8080:8080"
      - "9695:9695"
      - "9693:9693"
    volumes:
      - ./hasura:/hasura
      - ./hasura/migrations:/hasura-migrations
      - ./hasura/metadata:/hasura-metadata
    depends_on:
      - postgres
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      # enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "false" # this "console" does not save migrations, we need the "hasura-cli console" for that.
      # enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      # uncomment next line to set an admin secret
      HASURA_GRAPHQL_ADMIN_SECRET: "wqoirewoi19287321987"

volumes:
  db_data:
  node_modules_volume:
